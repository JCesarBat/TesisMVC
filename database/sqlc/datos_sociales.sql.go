// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: datos_sociales.sql

package database

import (
	"context"
	"database/sql"
)

const deleteDatosSociales = `-- name: DeleteDatosSociales :exec
DELETE FROM "datos_sociales" WHERE "id_asociado" =$1
`

func (q *Queries) DeleteDatosSociales(ctx context.Context, idAsociado int64) error {
	_, err := q.db.ExecContext(ctx, deleteDatosSociales, idAsociado)
	return err
}

const getDatosSociales = `-- name: GetDatosSociales :one
SELECT id, id_asociado, ocupacion, estado_civil, integracion_revolucionaria FROM "datos_sociales" WHERE "id_asociado" =$1
`

func (q *Queries) GetDatosSociales(ctx context.Context, idAsociado int64) (DatosSociale, error) {
	row := q.db.QueryRowContext(ctx, getDatosSociales, idAsociado)
	var i DatosSociale
	err := row.Scan(
		&i.ID,
		&i.IDAsociado,
		&i.Ocupacion,
		&i.EstadoCivil,
		&i.IntegracionRevolucionaria,
	)
	return i, err
}

const insertDatosSociales = `-- name: InsertDatosSociales :one
INSERT INTO "datos_sociales" ("id_asociado",
                              "ocupacion",
                              "estado_civil",
                              "integracion_revolucionaria")VALUES($1,$2,$3,$4)returning id, id_asociado, ocupacion, estado_civil, integracion_revolucionaria
`

type InsertDatosSocialesParams struct {
	IDAsociado                int64          `json:"id_asociado"`
	Ocupacion                 sql.NullString `json:"ocupacion"`
	EstadoCivil               sql.NullString `json:"estado_civil"`
	IntegracionRevolucionaria sql.NullString `json:"integracion_revolucionaria"`
}

func (q *Queries) InsertDatosSociales(ctx context.Context, arg InsertDatosSocialesParams) (DatosSociale, error) {
	row := q.db.QueryRowContext(ctx, insertDatosSociales,
		arg.IDAsociado,
		arg.Ocupacion,
		arg.EstadoCivil,
		arg.IntegracionRevolucionaria,
	)
	var i DatosSociale
	err := row.Scan(
		&i.ID,
		&i.IDAsociado,
		&i.Ocupacion,
		&i.EstadoCivil,
		&i.IntegracionRevolucionaria,
	)
	return i, err
}

const updateDatosSociales = `-- name: UpdateDatosSociales :one
UPDATE  "datos_sociales" SET
                "ocupacion"=$2,
                "estado_civil"=$3,
                "integracion_revolucionaria"=$4 WHERE
                "id_asociado"=$1 returning id, id_asociado, ocupacion, estado_civil, integracion_revolucionaria
`

type UpdateDatosSocialesParams struct {
	IDAsociado                int64          `json:"id_asociado"`
	Ocupacion                 sql.NullString `json:"ocupacion"`
	EstadoCivil               sql.NullString `json:"estado_civil"`
	IntegracionRevolucionaria sql.NullString `json:"integracion_revolucionaria"`
}

func (q *Queries) UpdateDatosSociales(ctx context.Context, arg UpdateDatosSocialesParams) (DatosSociale, error) {
	row := q.db.QueryRowContext(ctx, updateDatosSociales,
		arg.IDAsociado,
		arg.Ocupacion,
		arg.EstadoCivil,
		arg.IntegracionRevolucionaria,
	)
	var i DatosSociale
	err := row.Scan(
		&i.ID,
		&i.IDAsociado,
		&i.Ocupacion,
		&i.EstadoCivil,
		&i.IntegracionRevolucionaria,
	)
	return i, err
}
